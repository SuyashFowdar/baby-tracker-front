{"version":3,"sources":["components/HomeMeasurement.js","containers/Home.js","query.js","components/List.js","actions/index.js","containers/Measure.js","containers/Admin.js","containers/Login.js","containers/App.js","reducers/measures.js","reducers/token.js","reducers/index.js","index.js"],"names":["HomeMeasurement","measure","measurements","to","id","className","length","amount","unit","style","color","toFixed","item","defaultProps","Home","measures","useSelector","state","map","getError","url","method","body","cb","res","obj","headers","token","localStorage","JSON","stringify","fetch","Request","then","response","ok","Error","json","catch","err","error","List","list","itemKey","displayAttr","toAddAttr","addItem","attr","onSubmit","type","name","placeholder","value","setToken","PetDetail","dispatch","useDispatch","useParams","useState","setMeasure","errorMessage","setErrorMessage","useEffect","i","parseInt","selectMeasure","e","preventDefault","query","target","measure_id","result","measurement","addMeasurement","Admin","redirect","setRedirect","admin","addMeasure","Login","signin","setSignin","performRequest","password","onClick","App","setMeasures","icon","faHome","clear","faSignOutAlt","exact","path","Measure","castMeasurement","date","Date","created_at","msmnt","toLocaleString","day","month","year","push","measuresReducer","action","forEach","m","_","cloneDeep","tokenReducer","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68166ee1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Link } from 'react-router-dom';\nimport '../assets/css/HomeMeasurement.scss';\n\nconst HomeMeasurement = ({ measure }) => {\n  const { measurements } = measure;\n\n  return (\n    <Router>\n      <Link to={`/measure/${measure.id}`} className=\"measure link bg-cover col cross-center main-center\">\n        {measurements && measurements.length\n          ? (\n            <div>\n              <div className=\"amount\">{`${measurements[measurements.length - 1].amount} ${measure.unit}`}</div>\n              {measurements[measurements.length - 2]\n                ? (\n                  <div className=\"row main-center dif\" style={{ color: measurements[measurements.length - 1].amount > measurements[measurements.length - 2].amount ? 'green' : 'red' }}>\n                    {measurements[measurements.length - 1].amount\n                    > measurements[measurements.length - 2].amount ? '+' : ''}\n                    {(measurements[measurements.length - 1].amount\n                    - measurements[measurements.length - 2].amount).toFixed(2)}\n                  </div>\n                )\n                : <div />}\n            </div>\n          )\n          : <div className=\"amount new\">Add new</div>}\n        <div className=\"type\">{measure.item}</div>\n      </Link>\n    </Router>\n  );\n};\n\nHomeMeasurement.defaultProps = {\n  measure: {},\n};\n\nHomeMeasurement.propTypes = {\n  measure: PropTypes.instanceOf(Object),\n};\n\nexport default HomeMeasurement;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport HomeMeasurement from '../components/HomeMeasurement';\nimport '../assets/css/Home.scss';\n\nconst Home = () => {\n  const measures = useSelector((state) => state.measures);\n\n  return (\n    <>\n      <div className=\"row wrap\">\n        {measures.map((measure) => (\n          <HomeMeasurement key={measure.id} measure={measure} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","const getError = (url) => {\n  switch (url) {\n    case 'users':\n      return \"Couldn't Sign Up!\";\n    case 'sessions':\n      return \"Couldn't Sign In!\";\n    case 'measurements':\n      return \"Couldn't process Measurements!\";\n    case 'measures':\n      return \"Couldn't process Measures!\";\n    default:\n      return \"Request couldn't be processed!\";\n  }\n};\n\nexport default (method, url, body, cb) => {\n  let res;\n  const host = process.env.NODE_ENV === 'production' ? 'https://suyash-baby-tracker.herokuapp.com/' : 'http://localhost:3000/';\n  const obj = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      token: localStorage.token,\n    },\n  };\n\n  if (method === 'POST') {\n    obj.body = JSON.stringify(body);\n  }\n\n  fetch(new Request(`${host}${url}`, obj))\n    .then((response) => {\n      if (!response.ok) {\n        res = response;\n        throw Error(response);\n      }\n      return response.json();\n    })\n    .then((response) => {\n      cb(response);\n    })\n    .catch(() => {\n      if (res.json) {\n        res.json().then((err) => {\n          cb({ error: err.error || getError(url) });\n        });\n      } else {\n        cb({ error: getError(url) });\n      }\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../assets/css/List.scss';\n\nconst List = ({\n  list,\n  itemKey,\n  displayAttr,\n  toAddAttr,\n  addItem,\n  unit,\n}) => (\n  <div className=\"list\">\n    <div className=\"items\">\n      {list.map((item) => (\n        <div key={item[itemKey]} className=\"row link\">\n          {displayAttr.map((attr) => (\n            <div key={attr} className=\"flex item\">\n              <div>{`${item[attr]} ${attr === 'amount' ? unit : ''}`}</div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n    <form onSubmit={addItem} className=\"row main-center wrap\">\n      {toAddAttr.map((attr) => (\n        <input key={attr} type=\"text\" name={attr} placeholder={attr} />\n      ))}\n      <input type=\"submit\" value=\"Add New\" className=\"link\" />\n    </form>\n  </div>\n);\n\nList.defaultProps = {\n  list: [],\n  unit: '',\n};\n\nList.propTypes = {\n  list: PropTypes.instanceOf(Array),\n  unit: PropTypes.string,\n  itemKey: PropTypes.string.isRequired,\n  addItem: PropTypes.func.isRequired,\n  displayAttr: PropTypes.instanceOf(Array).isRequired,\n  toAddAttr: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default List;\n","export const setMeasures = (result) => ({\n  type: 'SET_MEASURES',\n  result,\n});\n\nexport const addMeasure = (measure) => ({\n  type: 'ADD_MEASURE',\n  measure,\n});\n\nexport const addMeasurement = (measurement) => ({\n  type: 'ADD_MEASUREMENT',\n  measurement,\n});\n\nexport const setToken = (token) => ({\n  type: 'SET_TOKEN',\n  token,\n});\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport query from '../query';\nimport List from '../components/List';\nimport { addMeasurement } from '../actions';\n\nconst PetDetail = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const [measure, setMeasure] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const measures = useSelector((state) => state.measures);\n  const selectMeasure = () => {\n    for (let i = 0; i < measures.length; i += 1) {\n      if (measures[i].id === parseInt(id, 10)) {\n        setMeasure(measures[i]);\n        break;\n      }\n    }\n  };\n  const createMeasurement = (e) => {\n    e.preventDefault();\n    query('POST', 'measurements', {\n      amount: e.target.amount.value,\n      measure_id: measure.id,\n    }, (result) => {\n      if (result.measurement) {\n        e.target.amount.value = '';\n        const { measurement } = result;\n        measurement.measure_id = measure.id;\n        dispatch(addMeasurement(measurement));\n      } else {\n        setErrorMessage(result.error);\n      }\n    });\n  };\n  useEffect(() => {\n    selectMeasure();\n  });\n  return (\n    <>\n      <div className=\"row cross-center main-center\">\n        <div className=\"w-100 h-100\">\n          <List list={measure.measurements} itemKey=\"created_at\" displayAttr={['date', 'amount']} toAddAttr={['amount']} unit={measure.unit} addItem={createMeasurement} />\n          <div className=\"error row main-center cross-center\">{errorMessage}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PetDetail;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport query from '../query';\nimport List from '../components/List';\nimport { addMeasure } from '../actions';\n\nconst Admin = () => {\n  const [redirect, setRedirect] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatch = useDispatch();\n  const measures = useSelector((state) => state.measures);\n  const createMeasure = (e) => {\n    e.preventDefault();\n    const measure = {\n      item: e.target.item.value,\n      unit: e.target.unit.value,\n    };\n    query('POST', 'measures', measure, (result) => {\n      if (result.id) {\n        measure.id = result.id;\n        e.target.item.value = '';\n        e.target.unit.value = '';\n        dispatch(addMeasure(measure));\n      } else {\n        setErrorMessage(result.error);\n      }\n    });\n  };\n  useEffect(() => {\n    if (localStorage.token) {\n      query('GET', 'admins', null, (result) => {\n        if (result.admin) {\n          setRedirect(false);\n        } else {\n          setRedirect(true);\n        }\n      });\n    }\n  });\n\n  return (\n    <div>\n      {redirect\n        ? <Redirect to=\"/\" />\n        : (\n          <div>\n            {redirect === null\n              ? <div />\n              : (\n                <div>\n                  <List list={measures} itemKey=\"item\" displayAttr={['item', 'unit']} toAddAttr={['item', 'unit']} addItem={createMeasure} />\n                  <div className=\"error row main-center cross-center\">{errorMessage}</div>\n                </div>\n              )}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Admin;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport query from '../query';\nimport '../assets/css/Login.scss';\nimport { setToken } from '../actions';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [signin, setSignin] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const performRequest = (e, url) => {\n    e.preventDefault();\n    query('POST', url, {\n      name: e.target.name.value,\n      password: e.target.password.value,\n    }, (result) => {\n      if (result.token) {\n        localStorage.token = result.token;\n        dispatch(setToken(result.token));\n      } else {\n        setErrorMessage(result.error);\n      }\n    });\n  };\n  return (\n    <div className=\"login\">\n      <div>\n        {signin\n          ? (\n            <div className=\"col cross-center main-center\">\n              <form onSubmit={(e) => { performRequest(e, 'sessions'); }} className=\"col cross-center\">\n                <h2>Sign In</h2>\n                <input type=\"text\" name=\"name\" placeholder=\"Username\" />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" />\n                <input type=\"submit\" value=\"Sign In\" className=\"link w-90\" />\n                <button type=\"button\" onClick={() => { setSignin(false); }} className=\"link button w-90\">or create new account</button>\n              </form>\n            </div>\n          )\n          : (\n            <div className=\"col cross-center main-center\">\n              <form onSubmit={(e) => { performRequest(e, 'users'); }} className=\"col cross-center\">\n                <h2>Create new account</h2>\n                <input type=\"text\" name=\"name\" placeholder=\"Username\" />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" />\n                <input type=\"submit\" value=\"Sign Up\" className=\"link w-90\" />\n                <button type=\"button\" onClick={() => { setSignin(true); }} className=\"link button w-90\">Go to Sign In page</button>\n              </form>\n            </div>\n          )}\n        <div className=\"error row main-center cross-center\">{errorMessage}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter as Router,\n  Link,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt, faHome } from '@fortawesome/free-solid-svg-icons';\nimport Home from './Home';\nimport Measure from './Measure';\nimport Admin from './Admin';\nimport Login from './Login';\nimport query from '../query';\nimport '../assets/css/App.scss';\nimport { setMeasures, setToken } from '../actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('');\n  const token = useSelector((state) => state.token);\n  const logout = () => {\n    localStorage.clear();\n    dispatch(setToken(''));\n  };\n\n  useEffect(() => {\n    if (localStorage.token) {\n      if (!token) dispatch(setToken(localStorage.token));\n      query('GET', 'measurements', null, (result) => {\n        if (result.measures && result.measurements) {\n          dispatch(setMeasures(result));\n        } else {\n          setErrorMessage(result.error);\n        }\n      });\n    }\n  }, [token]);\n\n  return (\n    <div>\n      {(localStorage.token || token)\n        ? (\n          <Router>\n            <div className=\"error row main-center cross-center\">{errorMessage}</div>\n            <header className=\"row main-space-around\">\n              <Link to=\"/\" className=\"col cross-center main-center shadow-5 link flex\">\n                <FontAwesomeIcon icon={faHome}>Sign Out</FontAwesomeIcon>\n                <span>Home</span>\n              </Link>\n              <button type=\"button\" onClick={logout} className=\"link col cross-center main-center flex\">\n                <FontAwesomeIcon icon={faSignOutAlt}>Sign Out</FontAwesomeIcon>\n                <span>Log out</span>\n              </button>\n            </header>\n            <div className=\"main\">\n              <Switch>\n                <Route exact path=\"/\"><Home /></Route>\n                <Route path=\"/measure/:id\"><Measure /></Route>\n                <Route path=\"/admin\"><Admin /></Route>\n              </Switch>\n            </div>\n          </Router>\n        )\n        : <Login />}\n    </div>\n  );\n};\n\nexport default App;\n","import _ from 'lodash';\n\nconst castMeasurement = (measure, measurement) => {\n  const date = new Date(measurement.created_at);\n  const msmnt = measurement;\n  msmnt.date = date.toLocaleString('default', { day: 'numeric', month: 'long', year: 'numeric' });\n  measure.measurements.push(msmnt);\n};\n\nconst measuresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_MEASURES':\n      action.result.measures.forEach((m) => {\n        const measure = m;\n        measure.measurements = [];\n        action.result.measurements.forEach((measurement) => {\n          if (measurement.measure_id === measure.id) {\n            castMeasurement(measure, measurement);\n          }\n        });\n      });\n      return action.result.measures;\n    case 'ADD_MEASURE':\n      return [...state, action.measure];\n    case 'ADD_MEASUREMENT': {\n      const measures = _.cloneDeep(state);\n      measures.forEach((measure) => {\n        if (measure.id === action.measurement.measure_id) {\n          castMeasurement(measure, action.measurement);\n        }\n      });\n      return measures;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default measuresReducer;\n","const tokenReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return action.token;\n    default:\n      return state;\n  }\n};\n\nexport default tokenReducer;\n","import { combineReducers } from 'redux';\nimport measures from './measures';\nimport token from './token';\n\nexport default combineReducers({ measures, token });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './assets/css/index.scss';\nimport App from './containers/App';\nimport reducer from './reducers/index';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}